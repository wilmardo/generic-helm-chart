---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  strategy: {{ toYaml .Values.strategy | nindent 4 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            {{- .Values.livenessProbe | default (dict "tcpSocket" (dict "port" .Values.service.port)) | toYaml | nindent 12 }}
          readinessProbe:
            {{- .Values.readinessProbe | default (dict "tcpSocket" (dict "port" .Values.service.port)) | toYaml | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.persistence.enabled}}
            - mountPath: {{ .Values.persistence.mountPath }}
              name: pvc
            {{- end }}
            {{- if ne .Values.config.mountPath "env" }}
            - mountPath: {{ .Values.config.mountPath }}
              name: configmap
            {{- end }}
          envFrom:
            {{- if eq .Values.config.mountPath "env" }}
            - configMapRef:
                name: {{ include "generic.fullname" . }}
                optional: true
            {{- end }}
            - secretRef:
                name: {{ include "generic.fullname" . }}
                optional: true
            {{- with .Values.extraEnvFrom }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
          env:
            {{- with .Values.extraEnv }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        {{- with .Values.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: pvc
          persistentVolumeClaim:
            claimName: {{ include "generic.fullname" . }}
        {{- end }}
        {{- if ne .Values.config.mountPath "env" }}
        - name: configmap
          configMap:
            name: {{ include "generic.fullname" . }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
